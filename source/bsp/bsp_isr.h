/**
 * @file bsp_isr.h
 * @author Utku Cecen (utku.cecen@daiichi.com)
 * @brief
 * @version 0.1
 * @date 2023-02-02
 *
 * @copyright Copyright (c) 2023
 *
 *  https://codebeamer.daiichi.com/issue/177745
 *
 */

#ifndef BSP_ISR_H
#define BSP_ISR_H

#include "daiichi_types.h"

/*******************************************************************************
 * Macros
 ******************************************************************************/

/**
 * @brief Specifies the maximum number of registered SYSTICK callbacks.
 *
 * https://codebeamer.daiichi.com/issue/180640
 *
 */
#define BSP_ISR_CFG_SYSTICK_CNT_MAX 5U

/*******************************************************************************
 * Enumerations
 ******************************************************************************/

/**
 * @brief List of MCU core interrupt handlers.
 *
 * https://codebeamer.daiichi.com/issue/180643
 *
 */
typedef enum bsp_isr_e
{
    BSP_ISR_HARDFAULT = 0U,
    BSP_ISR_SYSTICK = 1U,

} bsp_isr_t;

/*******************************************************************************
 * Type Definitions
 ******************************************************************************/

/**
 * @brief When an interrupt is generated by MCU, the register callback function
 * called by the bsp_isr.
 *
 * Function pointer type for interrupt handler callback specified when
 * registering to the ISR via bsp_isr_cb_set.
 *
 * https://codebeamer.daiichi.com/issue/180642
 *
 */
typedef void (*bsp_isr_cb_t)(void);

/*******************************************************************************
 * Public Functions
 ******************************************************************************/

/**
 * @brief Set the priority of interrupts and install interrupt handler routine.
 *
 * https://codebeamer.daiichi.com/issue/180644
 *
 */
void bsp_isr_init(void);

/**
 * @brief Disable activated interrupts.
 *
 * https://codebeamer.daiichi.com/issue/180645
 *
 */
void bsp_isr_enter_critical(void);

/**
 * @brief Enable activated interrupts.
 *
 * https://codebeamer.daiichi.com/issue/180646
 *
 */
void bsp_isr_exit_critical(void);

/**
 * @brief Set Callback function to ISR handle ID.
 *
 * https://codebeamer.daiichi.com/issue/180647
 *
 * @param[in] isr MCU core interrupt handler.
 * @param[in] callback Pointer to callback function.
 */
void bsp_isr_cb_set(bsp_isr_t isr, bsp_isr_cb_t callback);

#endif /* BSP_ISR_H */

// end of file
